//
//  ImagePickerResource.swift
//  ImagePicker
//
//  Created by Emiaostein on 3/1/16.
//  Copyright (c) 2016 com.botai. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

open class ImagePickerResource : NSObject {

    //// Cache

    fileprivate struct Cache {
        static var imageOfCamera: UIImage?
        static var imageOfCameraSelected: UIImage?
        static var cameraTargets: [AnyObject]?
        static var imageOfPhotoLibrary: UIImage?
        static var imageOfPhotoLibrarySelected: UIImage?
        static var photoLibraryTargets: [AnyObject]?
    }

    //// Drawing Methods

    open class func drawCamera(_ color: UIColor = UIColor(red: 74.0 / 255.0, green: 74.0 / 255.0, blue: 74.0 / 255.0, alpha: 1)) {
        //// Color Declarations
        let fillColor = color

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 24.89, y: 3.33))
        bezierPath.addCurve(to: CGPoint(x: 26.4, y: 3.92), controlPoint1: CGPoint(x: 25.5, y: 3.33), controlPoint2: CGPoint(x: 26, y: 3.53))
        bezierPath.addCurve(to: CGPoint(x: 27, y: 5.49), controlPoint1: CGPoint(x: 26.8, y: 4.32), controlPoint2: CGPoint(x: 27, y: 4.84))
        bezierPath.addLine(to: CGPoint(x: 27, y: 17.71))
        bezierPath.addCurve(to: CGPoint(x: 26.4, y: 19.34), controlPoint1: CGPoint(x: 27, y: 18.36), controlPoint2: CGPoint(x: 26.8, y: 18.9))
        bezierPath.addCurve(to: CGPoint(x: 24.89, y: 20), controlPoint1: CGPoint(x: 26, y: 19.78), controlPoint2: CGPoint(x: 25.5, y: 20))
        bezierPath.addLine(to: CGPoint(x: 2.39, y: 20))
        bezierPath.addCurve(to: CGPoint(x: 0.7, y: 19.31), controlPoint1: CGPoint(x: 1.73, y: 20), controlPoint2: CGPoint(x: 1.17, y: 19.77))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 17.71), controlPoint1: CGPoint(x: 0.23, y: 18.84), controlPoint2: CGPoint(x: 0, y: 18.31))
        bezierPath.addLine(to: CGPoint(x: 0, y: 5.49))
        bezierPath.addCurve(to: CGPoint(x: 0.7, y: 3.96), controlPoint1: CGPoint(x: 0, y: 4.88), controlPoint2: CGPoint(x: 0.23, y: 4.38))
        bezierPath.addCurve(to: CGPoint(x: 2.39, y: 3.33), controlPoint1: CGPoint(x: 1.17, y: 3.54), controlPoint2: CGPoint(x: 1.73, y: 3.33))
        bezierPath.addLine(to: CGPoint(x: 3.3, y: 3.33))
        bezierPath.addLine(to: CGPoint(x: 3.3, y: 2.22))
        bezierPath.addLine(to: CGPoint(x: 5.7, y: 2.22))
        bezierPath.addLine(to: CGPoint(x: 5.7, y: 3.33))
        bezierPath.addLine(to: CGPoint(x: 6.61, y: 3.33))
        bezierPath.addCurve(to: CGPoint(x: 9.18, y: 0.62), controlPoint1: CGPoint(x: 7.83, y: 1.94), controlPoint2: CGPoint(x: 8.68, y: 1.04))
        bezierPath.addCurve(to: CGPoint(x: 10.48, y: 0), controlPoint1: CGPoint(x: 9.67, y: 0.21), controlPoint2: CGPoint(x: 10.1, y: 0))
        bezierPath.addLine(to: CGPoint(x: 16.66, y: 0))
        bezierPath.addCurve(to: CGPoint(x: 17.96, y: 0.62), controlPoint1: CGPoint(x: 17.04, y: 0), controlPoint2: CGPoint(x: 17.47, y: 0.21))
        bezierPath.addCurve(to: CGPoint(x: 20.53, y: 3.33), controlPoint1: CGPoint(x: 18.46, y: 1.04), controlPoint2: CGPoint(x: 19.31, y: 1.94))
        bezierPath.addLine(to: CGPoint(x: 24.89, y: 3.33))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 25.88, y: 17.71))
        bezierPath.addLine(to: CGPoint(x: 25.88, y: 5.49))
        bezierPath.addCurve(to: CGPoint(x: 24.89, y: 4.44), controlPoint1: CGPoint(x: 25.88, y: 4.79), controlPoint2: CGPoint(x: 25.55, y: 4.44))
        bezierPath.addLine(to: CGPoint(x: 20.53, y: 4.44))
        bezierPath.addLine(to: CGPoint(x: 20.04, y: 4.44))
        bezierPath.addLine(to: CGPoint(x: 19.69, y: 4.24))
        bezierPath.addCurve(to: CGPoint(x: 18.98, y: 3.47), controlPoint1: CGPoint(x: 19.55, y: 4.05), controlPoint2: CGPoint(x: 19.31, y: 3.8))
        bezierPath.addCurve(to: CGPoint(x: 17.96, y: 2.29), controlPoint1: CGPoint(x: 18.7, y: 3.15), controlPoint2: CGPoint(x: 18.36, y: 2.75))
        bezierPath.addCurve(to: CGPoint(x: 17.16, y: 1.39), controlPoint1: CGPoint(x: 17.57, y: 1.83), controlPoint2: CGPoint(x: 17.3, y: 1.53))
        bezierPath.addLine(to: CGPoint(x: 16.66, y: 1.11))
        bezierPath.addLine(to: CGPoint(x: 10.48, y: 1.11))
        bezierPath.addCurve(to: CGPoint(x: 9.98, y: 1.39), controlPoint1: CGPoint(x: 10.38, y: 1.11), controlPoint2: CGPoint(x: 10.22, y: 1.2))
        bezierPath.addCurve(to: CGPoint(x: 8.23, y: 3.26), controlPoint1: CGPoint(x: 9.66, y: 1.67), controlPoint2: CGPoint(x: 9.07, y: 2.29))
        bezierPath.addCurve(to: CGPoint(x: 7.45, y: 4.24), controlPoint1: CGPoint(x: 7.8, y: 3.82), controlPoint2: CGPoint(x: 7.55, y: 4.14))
        bezierPath.addLine(to: CGPoint(x: 7.1, y: 4.44))
        bezierPath.addLine(to: CGPoint(x: 6.61, y: 4.44))
        bezierPath.addLine(to: CGPoint(x: 2.39, y: 4.44))
        bezierPath.addCurve(to: CGPoint(x: 1.51, y: 4.76), controlPoint1: CGPoint(x: 2.06, y: 4.44), controlPoint2: CGPoint(x: 1.77, y: 4.55))
        bezierPath.addCurve(to: CGPoint(x: 1.12, y: 5.49), controlPoint1: CGPoint(x: 1.25, y: 4.97), controlPoint2: CGPoint(x: 1.12, y: 5.21))
        bezierPath.addLine(to: CGPoint(x: 1.12, y: 17.71))
        bezierPath.addCurve(to: CGPoint(x: 1.51, y: 18.54), controlPoint1: CGPoint(x: 1.12, y: 18.03), controlPoint2: CGPoint(x: 1.25, y: 18.31))
        bezierPath.addCurve(to: CGPoint(x: 2.39, y: 18.89), controlPoint1: CGPoint(x: 1.77, y: 18.77), controlPoint2: CGPoint(x: 2.06, y: 18.89))
        bezierPath.addLine(to: CGPoint(x: 24.89, y: 18.89))
        bezierPath.addCurve(to: CGPoint(x: 25.88, y: 17.71), controlPoint1: CGPoint(x: 25.55, y: 18.89), controlPoint2: CGPoint(x: 25.88, y: 18.5))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 13.5, y: 5.42))
        bezierPath.addCurve(to: CGPoint(x: 17.75, y: 7.15), controlPoint1: CGPoint(x: 15.14, y: 5.42), controlPoint2: CGPoint(x: 16.56, y: 6))
        bezierPath.addCurve(to: CGPoint(x: 19.55, y: 11.32), controlPoint1: CGPoint(x: 18.95, y: 8.31), controlPoint2: CGPoint(x: 19.55, y: 9.7))
        bezierPath.addCurve(to: CGPoint(x: 17.75, y: 15.49), controlPoint1: CGPoint(x: 19.55, y: 12.94), controlPoint2: CGPoint(x: 18.95, y: 14.33))
        bezierPath.addCurve(to: CGPoint(x: 13.5, y: 17.22), controlPoint1: CGPoint(x: 16.56, y: 16.64), controlPoint2: CGPoint(x: 15.14, y: 17.22))
        bezierPath.addCurve(to: CGPoint(x: 9.25, y: 15.49), controlPoint1: CGPoint(x: 11.86, y: 17.22), controlPoint2: CGPoint(x: 10.44, y: 16.64))
        bezierPath.addCurve(to: CGPoint(x: 7.45, y: 11.32), controlPoint1: CGPoint(x: 8.05, y: 14.33), controlPoint2: CGPoint(x: 7.45, y: 12.94))
        bezierPath.addCurve(to: CGPoint(x: 9.25, y: 7.15), controlPoint1: CGPoint(x: 7.45, y: 9.7), controlPoint2: CGPoint(x: 8.05, y: 8.31))
        bezierPath.addCurve(to: CGPoint(x: 13.5, y: 5.42), controlPoint1: CGPoint(x: 10.44, y: 6), controlPoint2: CGPoint(x: 11.86, y: 5.42))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 13.5, y: 16.11))
        bezierPath.addCurve(to: CGPoint(x: 16.98, y: 14.69), controlPoint1: CGPoint(x: 14.86, y: 16.11), controlPoint2: CGPoint(x: 16.02, y: 15.64))
        bezierPath.addCurve(to: CGPoint(x: 18.42, y: 11.32), controlPoint1: CGPoint(x: 17.94, y: 13.74), controlPoint2: CGPoint(x: 18.42, y: 12.62))
        bezierPath.addCurve(to: CGPoint(x: 16.98, y: 7.95), controlPoint1: CGPoint(x: 18.42, y: 10.02), controlPoint2: CGPoint(x: 17.94, y: 8.9))
        bezierPath.addCurve(to: CGPoint(x: 13.5, y: 6.53), controlPoint1: CGPoint(x: 16.02, y: 7), controlPoint2: CGPoint(x: 14.86, y: 6.53))
        bezierPath.addCurve(to: CGPoint(x: 10.02, y: 7.95), controlPoint1: CGPoint(x: 12.14, y: 6.53), controlPoint2: CGPoint(x: 10.98, y: 7))
        bezierPath.addCurve(to: CGPoint(x: 8.58, y: 11.32), controlPoint1: CGPoint(x: 9.06, y: 8.9), controlPoint2: CGPoint(x: 8.58, y: 10.02))
        bezierPath.addCurve(to: CGPoint(x: 10.02, y: 14.69), controlPoint1: CGPoint(x: 8.58, y: 12.62), controlPoint2: CGPoint(x: 9.06, y: 13.74))
        bezierPath.addCurve(to: CGPoint(x: 13.5, y: 16.11), controlPoint1: CGPoint(x: 10.98, y: 15.64), controlPoint2: CGPoint(x: 12.14, y: 16.11))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 20.25, y: 6.74))
        bezierPath.addLine(to: CGPoint(x: 20.25, y: 5.56))
        bezierPath.addLine(to: CGPoint(x: 21.45, y: 5.56))
        bezierPath.addLine(to: CGPoint(x: 21.45, y: 6.74))
        bezierPath.addLine(to: CGPoint(x: 20.25, y: 6.74))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 11.25, y: 11.32))
        bezierPath.addCurve(to: CGPoint(x: 13.5, y: 9.1), controlPoint1: CGPoint(x: 11.25, y: 9.84), controlPoint2: CGPoint(x: 12, y: 9.1))
        bezierPath.addCurve(to: CGPoint(x: 15.75, y: 11.32), controlPoint1: CGPoint(x: 15, y: 9.1), controlPoint2: CGPoint(x: 15.75, y: 9.84))
        bezierPath.addCurve(to: CGPoint(x: 13.5, y: 13.54), controlPoint1: CGPoint(x: 15.75, y: 12.8), controlPoint2: CGPoint(x: 15, y: 13.54))
        bezierPath.addCurve(to: CGPoint(x: 11.25, y: 11.32), controlPoint1: CGPoint(x: 12, y: 13.54), controlPoint2: CGPoint(x: 11.25, y: 12.8))
        bezierPath.close()
        bezierPath.miterLimit = 4;

        fillColor.setFill()
        bezierPath.fill()
    }

    open class func drawPhotoLibrary(_ color: UIColor = UIColor(red: 74.0 / 255.0, green: 74.0 / 255.0, blue: 74.0 / 255.0, alpha: 1)) {
        //// Color Declarations
        let fillColor = color

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0, y: 0))
        bezierPath.addLine(to: CGPoint(x: 0, y: 20))
        bezierPath.addLine(to: CGPoint(x: 20, y: 20))
        bezierPath.addLine(to: CGPoint(x: 20, y: 0))
        bezierPath.addLine(to: CGPoint(x: 0, y: 0))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 0.8, y: 12.59))
        bezierPath.addLine(to: CGPoint(x: 6.42, y: 6.44))
        bezierPath.addLine(to: CGPoint(x: 11.94, y: 12.24))
        bezierPath.addLine(to: CGPoint(x: 14.75, y: 9.76))
        bezierPath.addLine(to: CGPoint(x: 18.92, y: 14.15))
        bezierPath.addLine(to: CGPoint(x: 0.8, y: 14.15))
        bezierPath.addLine(to: CGPoint(x: 0.8, y: 12.59))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 19.2, y: 19.17))
        bezierPath.addLine(to: CGPoint(x: 0.8, y: 19.17))
        bezierPath.addLine(to: CGPoint(x: 0.8, y: 14.98))
        bezierPath.addLine(to: CGPoint(x: 19.2, y: 14.98))
        bezierPath.addLine(to: CGPoint(x: 19.2, y: 19.17))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 19.2, y: 13.27))
        bezierPath.addLine(to: CGPoint(x: 14.85, y: 8.59))
        bezierPath.addLine(to: CGPoint(x: 12.04, y: 11.07))
        bezierPath.addLine(to: CGPoint(x: 6.42, y: 5.27))
        bezierPath.addLine(to: CGPoint(x: 0.8, y: 11.37))
        bezierPath.addLine(to: CGPoint(x: 0.8, y: 0.83))
        bezierPath.addLine(to: CGPoint(x: 19.2, y: 0.83))
        bezierPath.addLine(to: CGPoint(x: 19.2, y: 13.27))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 14.8, y: 6.68))
        bezierPath.addCurve(to: CGPoint(x: 15.57, y: 6.51), controlPoint1: CGPoint(x: 15.08, y: 6.68), controlPoint2: CGPoint(x: 15.34, y: 6.63))
        bezierPath.addCurve(to: CGPoint(x: 16.21, y: 6.05), controlPoint1: CGPoint(x: 15.81, y: 6.4), controlPoint2: CGPoint(x: 16.02, y: 6.24))
        bezierPath.addCurve(to: CGPoint(x: 16.63, y: 5.41), controlPoint1: CGPoint(x: 16.39, y: 5.89), controlPoint2: CGPoint(x: 16.53, y: 5.67))
        bezierPath.addCurve(to: CGPoint(x: 16.77, y: 4.59), controlPoint1: CGPoint(x: 16.72, y: 5.15), controlPoint2: CGPoint(x: 16.77, y: 4.88))
        bezierPath.addCurve(to: CGPoint(x: 16.63, y: 3.78), controlPoint1: CGPoint(x: 16.77, y: 4.29), controlPoint2: CGPoint(x: 16.72, y: 4.02))
        bezierPath.addCurve(to: CGPoint(x: 16.21, y: 3.12), controlPoint1: CGPoint(x: 16.53, y: 3.54), controlPoint2: CGPoint(x: 16.39, y: 3.32))
        bezierPath.addCurve(to: CGPoint(x: 15.57, y: 2.66), controlPoint1: CGPoint(x: 16.02, y: 2.93), controlPoint2: CGPoint(x: 15.81, y: 2.77))
        bezierPath.addCurve(to: CGPoint(x: 14.8, y: 2.49), controlPoint1: CGPoint(x: 15.34, y: 2.54), controlPoint2: CGPoint(x: 15.08, y: 2.49))
        bezierPath.addCurve(to: CGPoint(x: 14, y: 2.66), controlPoint1: CGPoint(x: 14.52, y: 2.49), controlPoint2: CGPoint(x: 14.25, y: 2.54))
        bezierPath.addCurve(to: CGPoint(x: 13.35, y: 3.12), controlPoint1: CGPoint(x: 13.75, y: 2.77), controlPoint2: CGPoint(x: 13.54, y: 2.93))
        bezierPath.addCurve(to: CGPoint(x: 12.95, y: 3.78), controlPoint1: CGPoint(x: 13.19, y: 3.32), controlPoint2: CGPoint(x: 13.06, y: 3.54))
        bezierPath.addCurve(to: CGPoint(x: 12.79, y: 4.59), controlPoint1: CGPoint(x: 12.84, y: 4.02), controlPoint2: CGPoint(x: 12.79, y: 4.29))
        bezierPath.addCurve(to: CGPoint(x: 12.95, y: 5.41), controlPoint1: CGPoint(x: 12.79, y: 4.88), controlPoint2: CGPoint(x: 12.84, y: 5.15))
        bezierPath.addCurve(to: CGPoint(x: 13.35, y: 6.05), controlPoint1: CGPoint(x: 13.06, y: 5.67), controlPoint2: CGPoint(x: 13.19, y: 5.89))
        bezierPath.addCurve(to: CGPoint(x: 14, y: 6.51), controlPoint1: CGPoint(x: 13.54, y: 6.24), controlPoint2: CGPoint(x: 13.75, y: 6.4))
        bezierPath.addCurve(to: CGPoint(x: 14.8, y: 6.68), controlPoint1: CGPoint(x: 14.25, y: 6.63), controlPoint2: CGPoint(x: 14.52, y: 6.68))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 14.8, y: 3.32))
        bezierPath.addCurve(to: CGPoint(x: 15.27, y: 3.41), controlPoint1: CGPoint(x: 14.96, y: 3.32), controlPoint2: CGPoint(x: 15.11, y: 3.35))
        bezierPath.addCurve(to: CGPoint(x: 15.64, y: 3.71), controlPoint1: CGPoint(x: 15.43, y: 3.48), controlPoint2: CGPoint(x: 15.55, y: 3.58))
        bezierPath.addCurve(to: CGPoint(x: 15.88, y: 4.1), controlPoint1: CGPoint(x: 15.74, y: 3.8), controlPoint2: CGPoint(x: 15.82, y: 3.93))
        bezierPath.addCurve(to: CGPoint(x: 15.97, y: 4.59), controlPoint1: CGPoint(x: 15.94, y: 4.26), controlPoint2: CGPoint(x: 15.97, y: 4.42))
        bezierPath.addCurve(to: CGPoint(x: 15.88, y: 5.1), controlPoint1: CGPoint(x: 15.97, y: 4.78), controlPoint2: CGPoint(x: 15.94, y: 4.95))
        bezierPath.addCurve(to: CGPoint(x: 15.64, y: 5.46), controlPoint1: CGPoint(x: 15.82, y: 5.24), controlPoint2: CGPoint(x: 15.74, y: 5.37))
        bezierPath.addCurve(to: CGPoint(x: 15.27, y: 5.76), controlPoint1: CGPoint(x: 15.55, y: 5.59), controlPoint2: CGPoint(x: 15.43, y: 5.69))
        bezierPath.addCurve(to: CGPoint(x: 14.8, y: 5.85), controlPoint1: CGPoint(x: 15.11, y: 5.82), controlPoint2: CGPoint(x: 14.96, y: 5.85))
        bezierPath.addCurve(to: CGPoint(x: 14.31, y: 5.76), controlPoint1: CGPoint(x: 14.61, y: 5.85), controlPoint2: CGPoint(x: 14.45, y: 5.82))
        bezierPath.addCurve(to: CGPoint(x: 13.91, y: 5.46), controlPoint1: CGPoint(x: 14.17, y: 5.69), controlPoint2: CGPoint(x: 14.04, y: 5.59))
        bezierPath.addCurve(to: CGPoint(x: 13.68, y: 5.1), controlPoint1: CGPoint(x: 13.82, y: 5.37), controlPoint2: CGPoint(x: 13.74, y: 5.24))
        bezierPath.addCurve(to: CGPoint(x: 13.58, y: 4.59), controlPoint1: CGPoint(x: 13.61, y: 4.95), controlPoint2: CGPoint(x: 13.58, y: 4.78))
        bezierPath.addCurve(to: CGPoint(x: 13.68, y: 4.1), controlPoint1: CGPoint(x: 13.58, y: 4.42), controlPoint2: CGPoint(x: 13.61, y: 4.26))
        bezierPath.addCurve(to: CGPoint(x: 13.91, y: 3.71), controlPoint1: CGPoint(x: 13.74, y: 3.93), controlPoint2: CGPoint(x: 13.82, y: 3.8))
        bezierPath.addCurve(to: CGPoint(x: 14.31, y: 3.41), controlPoint1: CGPoint(x: 14.04, y: 3.58), controlPoint2: CGPoint(x: 14.17, y: 3.48))
        bezierPath.addCurve(to: CGPoint(x: 14.8, y: 3.32), controlPoint1: CGPoint(x: 14.45, y: 3.35), controlPoint2: CGPoint(x: 14.61, y: 3.32))
        bezierPath.close()
        bezierPath.miterLimit = 4;

        fillColor.setFill()
        bezierPath.fill()
    }

    //// Generated Images

    open class var imageOfCamera: UIImage {
        if Cache.imageOfCamera != nil {
            return Cache.imageOfCamera!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 27, height: 20), false, 0)
            ImagePickerResource.drawCamera()

        Cache.imageOfCamera = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfCamera!
    }
    
    open class var imageOfCameraSelected: UIImage {
        if Cache.imageOfCameraSelected != nil {
            return Cache.imageOfCameraSelected!
        }
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 27, height: 20), false, 0)
        ImagePickerResource.drawCamera(UIColor.red)
        
        Cache.imageOfCameraSelected = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()
        
        return Cache.imageOfCameraSelected!
    }

    open class var imageOfPhotoLibrary: UIImage {
        if Cache.imageOfPhotoLibrary != nil {
            return Cache.imageOfPhotoLibrary!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
            ImagePickerResource.drawPhotoLibrary()

        Cache.imageOfPhotoLibrary = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return Cache.imageOfPhotoLibrary!
    }
    
    open class var imageOfPhotoLibrarySelected: UIImage {
        if Cache.imageOfPhotoLibrarySelected != nil {
            return Cache.imageOfPhotoLibrarySelected!
        }
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 20, height: 20), false, 0)
        ImagePickerResource.drawPhotoLibrary(UIColor.red)
        
        Cache.imageOfPhotoLibrarySelected = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()
        
        return Cache.imageOfPhotoLibrarySelected!
    }

    //// Customization Infrastructure

//    @IBOutlet var cameraTargets: [AnyObject]! {
//        get { return Cache.cameraTargets }
//        set {
//            Cache.cameraTargets = newValue
//            for target: AnyObject in newValue {
//                target.perform(#selector(setter: UITableViewCell.image), with: ImagePickerResource.imageOfCamera)
//            }
//        }
//    }
//
//    @IBOutlet var photoLibraryTargets: [AnyObject]! {
//        get { return Cache.photoLibraryTargets }
//        set {
//            Cache.photoLibraryTargets = newValue
//            for target: AnyObject in newValue {
//                target.perform(#selector(setter: UITableViewCell.image), with: ImagePickerResource.imageOfPhotoLibrary)
//            }
//        }
//    }

}
